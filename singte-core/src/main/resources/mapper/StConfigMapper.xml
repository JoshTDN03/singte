<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sixlab.minesoft.singte.core.mapper.StConfigMapper" >
  <resultMap id="BaseResultMap" type="cn.sixlab.minesoft.singte.core.models.StConfig" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="config_key" property="configKey" jdbcType="VARCHAR" />
    <result column="config_val" property="configVal" jdbcType="VARCHAR" />
    <result column="config_group" property="configGroup" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="intro" property="intro" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="CHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, config_key, config_val, config_group, create_time, intro, status
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from st_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from st_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.sixlab.minesoft.singte.core.models.StConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into st_config (config_key, config_val, config_group, 
      create_time, intro, status
      )
    values (#{configKey,jdbcType=VARCHAR}, #{configVal,jdbcType=VARCHAR}, #{configGroup,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{intro,jdbcType=VARCHAR}, #{status,jdbcType=CHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.sixlab.minesoft.singte.core.models.StConfig" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into st_config
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="configKey != null" >
        config_key,
      </if>
      <if test="configVal != null" >
        config_val,
      </if>
      <if test="configGroup != null" >
        config_group,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="intro != null" >
        intro,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="configKey != null" >
        #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="configVal != null" >
        #{configVal,jdbcType=VARCHAR},
      </if>
      <if test="configGroup != null" >
        #{configGroup,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="intro != null" >
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sixlab.minesoft.singte.core.models.StConfig" >
    update st_config
    <set >
      <if test="configKey != null" >
        config_key = #{configKey,jdbcType=VARCHAR},
      </if>
      <if test="configVal != null" >
        config_val = #{configVal,jdbcType=VARCHAR},
      </if>
      <if test="configGroup != null" >
        config_group = #{configGroup,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="intro != null" >
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sixlab.minesoft.singte.core.models.StConfig" >
    update st_config
    set config_key = #{configKey,jdbcType=VARCHAR},
      config_val = #{configVal,jdbcType=VARCHAR},
      config_group = #{configGroup,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      intro = #{intro,jdbcType=VARCHAR},
      status = #{status,jdbcType=CHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

<!--  -->
  <insert id="init">
    CREATE TABLE IF NOT EXISTS `st_config`
    (
      `id`           int(11) NOT NULL AUTO_INCREMENT,
      `config_key`   varchar(20)   DEFAULT NULL COMMENT '配置Key',
      `config_val`   varchar(255)  DEFAULT NULL COMMENT '配置Val',
      `config_group` varchar(20)   DEFAULT NULL COMMENT '配置分组',
      `intro`        varchar(1000) DEFAULT NULL COMMENT '配置描述',
      `status`       char(2)       DEFAULT NULL COMMENT '状态，1-启用，0-禁用',
      `create_time`  datetime      DEFAULT NULL COMMENT '创建时间',
      PRIMARY KEY (`id`),
      KEY `st_config_idx_config_key` (`config_key`),
      KEY `st_config_idx_config_group` (`config_group`)
    ) ENGINE = InnoDB
      DEFAULT CHARSET = utf8mb4 COMMENT ='系统配置表'
  </insert>

  <insert id="runSQL" parameterType="java.lang.String">
    ${sql}
  </insert>

  <select id="selectByKey" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List"/>
    from st_config
    where config_key = #{configKey,jdbcType=VARCHAR}
    limit 1
  </select>
</mapper>